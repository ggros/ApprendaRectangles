var __extends=this.__extends||function(n,t){function i(){this.constructor=n}i.prototype=t.prototype,n.prototype=new i};define(["require","exports"],function(n,t){var s=function(){function n(){this.tests=[],this.testClass=new r}return n.prototype.addTestClass=function(n,t){typeof t=="undefined"&&(t="Tests"),this.tests.push(new h(n,t))},n.prototype.isReservedFunctionName=function(n){for(var t in this.testClass)if(t===n)return!0;return!1},n.prototype.run=function(){for(var s=new i,e=new f,n,o,t,r=0;r<this.tests.length;++r){n=this.tests[r].testClass,o=this.tests[r].name;for(t in n)if(!this.isReservedFunctionName(t)&&typeof n[t]=="function"){typeof n.setUp=="function"&&n.setUp();try{n[t](s),e.passes.push(new u(o,t,"OK"))}catch(h){e.errors.push(new u(o,t,h))}typeof n.tearDown=="function"&&n.tearDown()}}return e},n.prototype.showResults=function(n,t){var i="<article><h1>"+this.getTestResult(t)+"<\/h1><p>"+this.getTestSummary(t)+'<\/p><section id="tsFail"><h2>Errors<\/h2><ul class="bad">'+this.getTestResultList(t.errors)+'<\/ul><\/section><section id="tsOkay"><h2>Passing Tests<\/h2><ul class="good">'+this.getTestResultList(t.passes)+"<\/ul><\/section><\/article>";n.innerHTML=i},n.prototype.getTestResult=function(n){return n.errors.length===0?"Test Passed":"Test Failed"},n.prototype.getTestSummary=function(n){return'Total tests: <span id="tsUnitTotalCout">'+(n.passes.length+n.errors.length).toString()+'<\/span>. Passed tests: <span id="tsUnitPassCount" class="good">'+n.passes.length+'<\/span>. Failed tests: <span id="tsUnitFailCount" class="bad">'+n.errors.length+"<\/span>."},n.prototype.getTestResultList=function(n){for(var i="",u="",f=!0,t,r=0;r<n.length;++r)t=n[r],t.testName!==u&&(u=t.testName,f?f=!1:i+="<\/li><\/ul>",i+="<li>"+t.testName+"<ul>"),i+="<li>"+t.funcName+"(): "+t.message+"<\/li>";return i+"<\/ul>"},n}(),i,r,e,o,f;t.Test=s,i=function(){function n(){}return n.prototype.setUp=function(){},n.prototype.tearDown=function(){},n.prototype.areIdentical=function(n,t){if(n!==t)throw"areIdentical failed when passed {"+typeof n+'} "'+n+'" and {'+typeof t+'} "'+t+'"';},n.prototype.areNotIdentical=function(n,t){if(n===t)throw"areNotIdentical failed when passed {"+typeof n+'} "'+n+'" and {'+typeof t+'} "'+t+'"';},n.prototype.isTrue=function(n){if(!n)throw"isTrue failed when passed {"+typeof n+'} "'+n+'"';},n.prototype.isFalse=function(n){if(n)throw"isFalse failed when passed {"+typeof n+'} "'+n+'"';},n.prototype.isTruthy=function(n){if(!n)throw"isTrue failed when passed {"+typeof n+'} "'+n+'"';},n.prototype.isFalsey=function(n){if(n)throw"isFalse failed when passed {"+typeof n+'} "'+n+'"';},n.prototype.throws=function(n){var t=!1;try{n()}catch(i){t=!0}if(!t)throw"did not throw an error";},n.prototype.fail=function(){throw"fail";},n}(),t.TestContext=i,r=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t}(i),t.TestClass=r,e=function(){function n(n,t){this.name=n,this.delgate=t}return n}(),t.FakeFunction=e,o=function(){function n(n){for(var t in n)this[t]=typeof n[t]=="function"?function(){}:null}return n.prototype.create=function(){return this},n.prototype.addFunction=function(n,t){this[n]=t},n.prototype.addProperty=function(n,t){this[n]=t},n}(),t.Fake=o;var h=function(){function n(n,t){this.testClass=n,this.name=t}return n}(),c=function(){function n(n,t){this.name=n,this.message=t}return n}(),u=function(){function n(n,t,i){this.testName=n,this.funcName=t,this.message=i}return n}();t.TestDescription=u,f=function(){function n(){this.passes=[],this.errors=[]}return n}(),t.TestResult=f})