define(["require","exports"],function(n,t){var r=function(){function n(n,t){this.x=n,this.y=t}return n.prototype.getDist=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},n.origin=new n(0,0),n}(),i,u,f,e;t.Point=r,i=function(){function n(n,t,i){this.R=n,this.G=t,this.B=i}return n}(),t.Color=i,u=function(){function n(n,t,r,u,f){this.left=n,this.top=t,this.width=r,this.height=u,this.name=f,this.color=new i(255,0,0)}return n.prototype.SayHello=function(){return"hello"},n.prototype.Intersection=function(t){var r=Math.max(this.left,t.left),f=Math.min(this.left+this.width,t.left+t.width),i,u,t;return r<=f&&(i=Math.max(this.top,t.top),u=Math.min(this.top+this.height,t.top+t.height),i<=u)?new n(r,i,f-r,u-i,"Intersection"):null},n.prototype.Contains=function(n){var t=this.left<=n.left&&this.left+this.width>=n.left+n.width&&this.top<=n.top&&this.top+this.height>=n.top+n.height;return console.log(t),console.log(this.left+this.width+">="+(n.left+n.width)),t},n.prototype.Adjacent=function(n){var t=this.Intersection(n);return t==null?!1:t.width==0||t.height==0},n}(),t.Rectangle=u,f=new r(3,4),e=f.getDist()})