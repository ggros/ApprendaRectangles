var __extends=this.__extends||function(n,t){function i(){this.constructor=n}i.prototype=t.prototype,n.prototype=new i};define(["require","exports","durandal/app","../entities/shapes","./SimpleEntry","../../Scripts/tsUnit"],function(n,t,i,r,u,f){function y(){var r=this,n,i;v=s.showMessage,s.showMessage=function(){return null},n=new h.Test,n.addTestClass(new c,"Points Tests"),n.addTestClass(new l,"Rectangle Tests"),n.addTestClass(new a,"SimpleEntry VM Tests"),i=n.run(),t.errors(i.errors),t.passes(i.passes),s.showMessage("test 12")}function p(){return s.showMessage=v,!0}var s=i,o=r,e=u,h=f,v,c,l,a;t.errors=ko.observableArray([]),t.passes=ko.observableArray([]),t.activate=y,t.canDeactivate=p,c=function(n){function t(){n.apply(this,arguments),this.target=new o.Point(0,5)}return __extends(t,n),t.prototype.getDistExpect5=function(){var n=this.target.getDist();this.areIdentical(5,n)},t.prototype.originIsZero=function(){var n=o.Point.origin;this.areIdentical(0,n.x),this.areIdentical(0,n.y)},t}(h.TestClass),t.PointTests=c,l=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.shouldNotIntersect=function(){var n=new o.Rectangle(0,0,100,100),t=new o.Rectangle(200,0,100,100),i=n.Intersection(t);this.isTrue(i==null)},t.prototype.interExpect5050=function(){var t=new o.Rectangle(0,0,100,100),i=new o.Rectangle(50,50,100,100),n=t.Intersection(i);this.areIdentical(50,n.left),this.areIdentical(50,n.top),this.areIdentical(50,n.width),this.areIdentical(50,n.height)},t.prototype.testZeroInter=function(){var t=new o.Rectangle(0,0,100,100),i=new o.Rectangle(100,100,100,100),n=t.Intersection(i);this.areIdentical(100,n.left),this.areIdentical(100,n.top),this.areIdentical(0,n.width),this.areIdentical(0,n.height)},t.prototype.testNoContainementSeparatedRect=function(){var n=new o.Rectangle(0,0,100,100),t=new o.Rectangle(100,100,100,100);this.isFalse(n.Contains(t))},t.prototype.testNoContainementIntersectingRect=function(){var n=new o.Rectangle(0,0,100,100),t=new o.Rectangle(50,50,100,100);this.isFalse(n.Contains(t))},t.prototype.testContainementOk=function(){var n=new o.Rectangle(0,0,100,100),t=new o.Rectangle(50,50,50,50);this.isTrue(n.Contains(t))},t.prototype.testAdjacentOk=function(){var n=new o.Rectangle(0,0,100,100),t=new o.Rectangle(100,50,50,50);this.isTrue(n.Adjacent(t)),n=new o.Rectangle(0,0,100,100),t=new o.Rectangle(50,100,50,50),this.isTrue(n.Adjacent(t))},t.prototype.testNotAdjacentOk=function(){var n=new o.Rectangle(0,0,100,100),t=new o.Rectangle(100,150,50,50);this.isFalse(n.Adjacent(t)),n=new o.Rectangle(0,0,100,100),t=new o.Rectangle(50,50,50,50),this.isFalse(n.Adjacent(t))},t}(h.TestClass),t.RectangleTests=l,a=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.setUp=function(){console.log("setUp")},t.prototype.tearDown=function(){console.log("tearDown")},t.prototype.IntersectionShouldAddRectangleToModel=function(){var t,n;e.rect1.left(0),e.rect1.top(0),e.rect1.width(100),e.rect1.height(100),e.rect2.left(50),e.rect2.top(50),e.rect2.width(50),e.rect2.height(50),t=e.rectangles().length+1,e.testIntersection(),this.areIdentical(t,e.rectangles().length),n=e.rectangles()[t-1],this.areIdentical(50,n.left()),this.areIdentical(50,n.top()),this.areIdentical(50,n.width()),this.areIdentical(50,n.height())},t.prototype.NoIntersectionShouldPopMessage=function(){e.rect2.left(500),e.rect2.top(500);var n="";s.showMessage=function(t){return n=t,null},e.testIntersection(),this.areIdentical("No Intersection",n)},t.prototype.NoContainementShouldPopMessage=function(){e.rect1.left(0),e.rect1.top(0),e.rect1.width(100),e.rect1.height(100),e.rect2.left(500),e.rect2.top(500),e.rect2.width(50),e.rect2.height(50);var n="";s.showMessage=function(t){return n=t,null},e.testContainement(),this.areIdentical("No Containement",n)},t.prototype.ContainementShouldPopMessage=function(){e.rect1.left(0),e.rect1.top(0),e.rect1.width(100),e.rect1.height(100),e.rect2.left(50),e.rect2.top(50),e.rect2.width(50),e.rect2.height(50);var n="";s.showMessage=function(t){return n=t,null},e.testContainement(),this.areIdentical("Rect 1 contains Rect 2",n)},t.prototype.NoAdjacencyShouldPopMessage=function(){e.rect1.left(0),e.rect1.top(0),e.rect1.width(100),e.rect1.height(100),e.rect2.left(500),e.rect2.top(500),e.rect2.width(50),e.rect2.height(50);var n="";s.showMessage=function(t){return n=t,null},e.testAdjacency(),this.areIdentical("Rectangles are not adjacents",n)},t.prototype.AdjacencyShouldPopMessage=function(){e.rect1.left(0),e.rect1.top(0),e.rect1.width(100),e.rect1.height(100),e.rect2.left(100),e.rect2.top(0),e.rect2.width(50),e.rect2.height(50);var n="";s.showMessage=function(t){return n=t,null},e.testAdjacency(),this.areIdentical("Rectangle are adjacents",n)},t}(h.TestClass),t.SimpleEntryTests=a})