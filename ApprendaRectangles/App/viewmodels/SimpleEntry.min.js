define(["require","exports","durandal/app","../entities/shapes","./SimpleEntryHandlers"],function(n,t,i,r,u){function h(){var n=t.rect1.getRect().Intersection(t.rect2.getRect()),i;if(n==null)return f.showMessage("No Intersection");n.color=new e.Color(0,255,0),i=new o(n),t.rectangles.push(i)}function c(){return t.rect1.getRect().Contains(t.rect2.getRect())?f.showMessage("Rect 1 contains Rect 2"):t.rect2.getRect().Contains(t.rect1.getRect())?f.showMessage("Rect 2 contains Rect 1"):f.showMessage("No Containement")}function l(){return t.rect1.getRect().Adjacent(t.rect2.getRect())?f.showMessage("Rectangle are adjacents"):f.showMessage("Rectangles are not adjacents")}function a(){s.test()}var f=i,e=r,s=u,o=function(){function n(n){this.rect=n,this.left=ko.observable(0),this.top=ko.observable(0),this.width=ko.observable(0),this.height=ko.observable(100),this._rect=n,this.left(n.left),this.top(n.top),this.width(n.width),this.height(n.height)}return n.prototype.getRect=function(){return this._rect.left=+this.left.peek(),this._rect.top=+this.top.peek(),this._rect.width=+this.width.peek(),this._rect.height=+this.height.peek(),this._rect},n}();t.ObservableRect=o,t.displayName="Simple Entry",t.rect1=new o(new e.Rectangle(0,0,100,100,"rect 1")),t.rect2=new o(new e.Rectangle(50,50,100,100,"rect 2")),t.rect2._rect.color=new e.Color(0,0,255),t.rectangles=ko.observableArray([t.rect1,t.rect2]),t.testIntersection=h,t.testContainement=c,t.testAdjacency=l,t.activate=a})